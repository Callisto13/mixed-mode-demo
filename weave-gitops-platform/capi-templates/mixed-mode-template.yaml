apiVersion: capi.weave.works/v1alpha1
kind: CAPITemplate
metadata:
  name: cluster-template-mixed-mode
  namespace: default
  annotations:
    capi.weave.works/profile-0: '{"name": "prometheus", "version": "0.0.8" }'
spec:
  description: A mixed mode template with CAPMVM for control plane nodes and CAPBYOH for workers
  params:
    - name: CLUSTER_NAME
      required: true
      description: This is used for the cluster naming.
    - name: KUBERNETES_VERSION
      required: true
      description: Kubernetes version to use for the cluster
      options: ["1.23.5"]
    - name: CONTROL_PLANE_MACHINE_COUNT
      required: true
      description: Number of control planes
      options: ["1", "3"]
    - name: WORKER_MACHINE_COUNT
      required: true
      description: Number of physical worker nodes
      options: ["1"]
    - name: VM_HOST_IP
      required: true
      description: IP for the physical machine that will be the host for the microVM nodes.
    - name: CONTROL_PLANE_VIP
      required: true
      description: IP for the Kubernetes Endpoint. For demo use 192.168.10.25
    - name: CONTAINER_NETWORKING
      description: Select the CNI plugin to use
      options: ['cilium']
  resourcetemplates:
    - apiVersion: gitops.weave.works/v1alpha1
      kind: GitopsCluster
      metadata:
        name: "${CLUSTER_NAME}"
        labels:
          weave.works/capi: bootstrap
      spec:
        capiClusterRef:
          name: "${CLUSTER_NAME}"
    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: Cluster
      metadata:
        name: "${CLUSTER_NAME}"
        labels:
            weave.works/capi: bootstrap
            cni: ${CONTAINER_NETWORKING}
      spec:
        clusterNetwork:
            pods:
            cidrBlocks:
                - 172.25.0.0/16
            services:
              cidrBlocks:
                  - 172.26.0.0/16
        infrastructureRef:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
            kind: MicrovmCluster
            name: "${CLUSTER_NAME}"
        controlPlaneRef:
            kind: KubeadmControlPlane
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            name: "${CLUSTER_NAME}-control-plane"

    - apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      kind: MicrovmCluster
      metadata:
        name: "${CLUSTER_NAME}"
      spec:
        controlPlaneEndpoint:
          host: "${CONTROL_PLANE_VIP}"
          port: 6443
        sshPublicKeys:
        - user: root
          authorizedKeys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWIkWQdEF0Wlvak13wdA/1eWtt6Ni+2YAO12O3clUo4FA7NOhBU6d56kZDLszipGEQycDtQOZP3mxK9svnQrqlwOwAPCuvLmy88BLRKDy0KwOKOTNfeFMBKoH8bdfLey6eME9LJKOOKHzZwsabH5M4R+Mr1rkAZGKOyNewzyjeFpBGM+z1am9obVWhCvoCVLG7/3aJM4cC79p/zSmjr30SxkymWFWcbgAy+RSQLMWRA9STuqf5Rt2Mn6Z6ZqzlgXb/K6XqTAfC+VpiNnfY1xrZy9G+ATu9cTiz1nkpbXzrFd3Skz8Rz3pacEDO4sENc4erMDUFmlX8jwn99kG8TGZ+yYUvLIBqsiZaEtKR3/GVkSchVNliJUBxKJgPalU/MEwDWUFPqlFjghtLmUzdAGNnZ0NU+rAx3gDjqwagXlZGPmd+SOe0JGJ1hMTLtFWKhBxKWk/r6Y1bS+/Kum5uc1QVkZMIQFlzcXsPVZf0k4TovzwByG4qBqpxGrvSHhMCDkXd4fcDusyMvxSqr+RKEuoWD8SDExNJHa/cqkW9kQCESVPO0rXz5Jd6mFjPF70vTGfghRvjFfEl8UOqggWwpCeT4NZn7r5/wER/15wY0y9oAz7xDRlMbqEWVRnuncBKSTu3bUFW2xUUQSNuMOavyxBlihoz+mapQY1Y0de8lEurcQ== richard@kraken
        bundleLookupBaseRegistry: projects.registry.vmware.com/cluster_api_provider_bringyourownhost
        placement:
          staticPool:
            hosts:
            - endpoint: "${VM_HOST_IP}:9090"
              controlplaneAllowed: true

    - kind: KubeadmControlPlane
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      metadata:
        name: "${CLUSTER_NAME}-control-plane"
      spec:
        replicas: ${CONTROL_PLANE_MACHINE_COUNT}
        version: "v${KUBERNETES_VERSION}"
        machineTemplate:
          infrastructureRef:
            kind: MicrovmMachineTemplate
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
            name: "${CLUSTER_NAME}-control-plane"
        kubeadmConfigSpec:
          initConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                provider-id: "microvm://{{ ds.meta_data.vm_host }}/{{ ds.meta_data.instance_id }}"
          clusterConfiguration: {}
          joinConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                provider-id: "microvm://{{ ds.meta_data.vm_host }}/{{ ds.meta_data.instance_id }}"
              ignorePreflightErrors:
              - DirAvailable--etc-kubernetes-manifests
          preKubeadmCommands:
          - mkdir -p /etc/kubernetes/manifests && ctr images pull ghcr.io/kube-vip/kube-vip:v0.4.0 && ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:v0.4.0 vip /kube-vip manifest pod --arp --interface $(ip -4 -j route list default | jq -r .[0].dev) --address ${CONTROL_PLANE_VIP} --controlplane --leaderElection > /etc/kubernetes/manifests/kube-vip.yaml

    - kind: MicrovmMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      metadata:
        name: "${CLUSTER_NAME}-control-plane"
      spec:
        template:
          spec:
            vcpu: 2
            memoryMb: 2048
            rootVolume:
              id: root
              image: "ghcr.io/weaveworks-liquidmetal/capmvm-kubernetes:${KUBERNETES_VERSION}"
              #mountPoint: "/"
            kernel:
              filename: "boot/vmlinux"
              image: "ghcr.io/weaveworks-liquidmetal/flintlock-kernel:5.10.77"
            kernelCmdline: {}
            networkInterfaces:
            - guestDeviceName: "eth1"
              type: "macvtap"

    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: MachineDeployment
      metadata:
        name: "${CLUSTER_NAME}-md-0"
      spec:
        clusterName: "${CLUSTER_NAME}"
        replicas: ${WORKER_MACHINE_COUNT}
        selector:
          matchLabels:
        template:
          spec:
            clusterName: "${CLUSTER_NAME}"
            version: "v${KUBERNETES_VERSION}"
            bootstrap:
              configRef:
                name: "${CLUSTER_NAME}-md-0"
                apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
                kind: KubeadmConfigTemplate
            infrastructureRef:
              name: "${CLUSTER_NAME}-md-0"
              apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
              kind: ByoMachineTemplate
    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: ByoMachineTemplate
      metadata:
        name: ${CLUSTER_NAME}-md-0
        namespace: default
      spec:
        template:
          spec:
            installerRef:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: K8sInstallerConfigTemplate
              name: ${CLUSTER_NAME}-md-0
              namespace: default

    - apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
      kind: KubeadmConfigTemplate
      metadata:
        name: "${CLUSTER_NAME}-md-0"
      spec:
        template:
          spec: {}

    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: K8sInstallerConfigTemplate
      metadata:
        name: ${CLUSTER_NAME}-md-0
      spec:
        template:
          spec:
            bundleRepo: projects.registry.vmware.com/cluster_api_provider_bringyourownhost
            bundleType: k8s